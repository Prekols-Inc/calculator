name: CI/CD Pipeline

on:
  push:
    branches: [main, ci/cd]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: passwd
          MYSQL_DATABASE: calculator_db
          MYSQL_USER: calc_user
          MYSQL_PASSWORD: calc_pass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend tests
      run: |
        python -m pytest -v
      env:
        MYSQL_HOST: localhost
        MYSQL_PORT: 3306
        MYSQL_USER: calc_user
        MYSQL_PASSWORD: calc_pass
        MYSQL_DATABASE: calculator_db

  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
  docker-build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/calculator-backend:latest

    - name: Build and push frontend image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/calculator-frontend:latest
        
  docker-compose-test:
    runs-on: ubuntu-latest
    needs: docker-build
  
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose-plugin

    - name: Create environment file
      run: |
        echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" > .env
        echo "MYSQL_HOST=mysql" >> .env
        echo "MYSQL_PORT=3306" >> .env
        echo "MYSQL_USER=calc_user" >> .env
        echo "MYSQL_PASSWORD=calc_pass" >> .env
        echo "MYSQL_DATABASE=calculator_db" >> .env

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Pull and start containers
      run: |
        docker compose pull
        docker compose up -d --wait

    - name: Verify services
      run: |
        docker compose ps
        timeout 60 bash -c 'until curl -f http://localhost:5000/health; do sleep 5; done'

    - name: Cleanup
      run: |
        docker compose down
